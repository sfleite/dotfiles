#------------------------------
# Dispon√≠vel no plugin Vim-R-Plugin

# library()
snippet lib
	library(${1:})
	${2:}
# If Condition
snippet if
	if(${1:condition}){
	    ${2:}
	}${3:}
snippet el
	else {
	    ${1:}
	}${2:}
snippet whi
	while(${1:condition}){
	    ${2:}
	}${3:}
# For Loop
snippet for
	for(${1:i} in ${2:range}){
	    ${3:}
	}${4:}
# Function
snippet fun
	${1:funname} <- function(${2:})
	{
	    ${3:}
	}${4:}
# repeat
snippet rep
	repeat{
	    ${1:}
	    if(${2:condition}) break
	}${3:}


#------------------------------
# adaptado de 
# https://github.com/timmywil/snipmate-snippets/blob/master/snippets/r.snippets

# require
snippet req
	require(${1:package})
	${2:}
# source 
snippet source
	source('${1:file}')
	${2:}
# functions
snippet fun
	${1:name} = function (${2:variables}) {
		${3}
	}${4:}
snippet ret
	return(${1})
	${2:}
# dataframes, lists, etc
snippet df
	${1:name}[${2:rows}, ${3:cols}]
	${4:}
snippet c
	c(${1:items})
	${2:}
snippet li
	list(${1:items})
	${2:}
snippet mat
	matrix(${1:data}, nrow=${2:rows}, ncol=${3:cols})
	${4:}
# apply functions
snippet apply
	apply(${1:array}, ${2:margin}, ${3:function})
	${4:}
snippet lapply
	lapply(${1:list}, ${2:function})
	${3:}
snippet sapply
	lapply(${1:list}, ${2:function})
	${3:}
snippet vapply
	vapply(${1:list}, ${2:function}, ${3:type})
	${4:}
snippet mapply
	mapply(${1:function}, ${2:...})
	${3:}
snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})
	${4:}
snippet rapply
	rapply(${1:list}, ${2:function})
	${3:}
# plyr functions
snippet dd
	ddply(${1:frame}, ${2:variables}, ${3:function})
	${4:}
snippet dl
	dlply(${1:frame}, ${2:variables}, ${3:function})
	${4:}
snippet da
	daply(${1:frame}, ${2:variables}, ${3:function})
	${4:}
snippet d_
	d_ply(${1:frame}, ${2:variables}, ${3:function})
	${4:}
snippet ad
	adply(${1:array}, ${2:margin}, ${3:function})
	${4:}
snippet al
	alply(${1:array}, ${2:margin}, ${3:function})
	${4:}
snippet aa
	aaply(${1:array}, ${2:margin}, ${3:function})
	${4:}
snippet a_
	a_ply(${1:array}, ${2:margin}, ${3:function})
	${4:}
snippet ld
	ldply(${1:list}, ${2:function})
	${3:}
snippet ll
	llply(${1:list}, ${2:function})
	${3:}
snippet la
	laply(${1:list}, ${2:function})
	${3:}
snippet l_
	l_ply(${1:list}, ${2:function})
	${3:}
snippet	md
	mdply(${1:matrix}, ${2:function})
	${3:}
snippet	ml
	mlply(${1:matrix}, ${2:function})
	${3:}
snippet	ma
	maply(${1:matrix}, ${2:function})
	${3:}
snippet	m_
	m_ply(${1:matrix}, ${2:function})
	${3:}

# plot functions
snippet plo
	plot(${1:x}, ${2:y})
	${3:}
snippet ggp
	ggplot(${1:data}, aes(${2:aesthetics}))${3:}
snippet img
	${1:(jpeg,bmp,png,tiff)}(filename="${2:filename}", width=${3}, height=${4}, unit="${5}")
	${6:plot}
	dev.off()${7:}

# statistical test functions
snippet fis
	fisher.test(${1:x}, ${2:y})
	${3:}
snippet chi
	chisq.test(${1:x}, ${2:y})
	${3:}
snippet tt
	t.test(${1:x}, ${2:y})
	${3:}
snippet wil
	wilcox.test(${1:x}, ${2:y})
	${3:}
snippet cor
	cor.test(${1:x}, ${2:y})
	${3:}
snippet fte
	var.test(${1:x}, ${2:y})
	${3:}
snippet kvt
	kv.test(${1:x}, ${2:y})
	${3:}

	

#------------------------------
# criado por Roney

# read
snippet read
	read.${1:csv}(
		'${2:file}',
		header = ${3:TRUE/FALSE},
		sep = '${4:,}',
		dec = '${5:.}',
		row.names = ${6:TRUE/FALSE}
		)${7:}
# write
snippet write
	write.${1:csv}(
		${2:x},
		file = '${3:}',
		sep = '${4:,}',
		row.names = ${5:TRUE/FALSE},
		col.names = ${6:TRUE/FALSE},
		na = '${7:NA}'
		)${8:}
# subset
snippet sub
	subset(
		${1:data},
		${2:subset},
		${3:select},
	      )${4:}
# qplot
snippet	qpl
	qplot(${1:x}, ${2:y}, data = ${3:})
	${4:}


